
/*
import java.util.*;


import java.awt.event.ActionListener;
 import javax.swing.Timer;
import javax.swing.*;
import javax.swing.event.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.JFrame;
import java.awt.Color;
import javax.swing.JFrame;
import java.awt.Graphics;
import java.util.Vector;
import javax.swing.JPanel;
import java.awt.*;
import java.util.ArrayList;
import java.lang.Runnable;
import java.lang.Thread;
import java.util.concurrent.*;
import java.util.concurrent.locks.*;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.Vector;
import java.lang.Runnable;
import java.lang.Thread;
import java.util.concurrent.*;
import java.util.concurrent.locks.*;
import java.util.Random;
import java.util.concurrent.ExecutorService;
//
//import javax.swing.Timer;
 
 */
import java.awt.Color;
import java.awt.event.*;
import javax.swing.*;
//import java.util.Timer;
//import java.util.TimerTask;
import javax.swing.JFrame;
import java.awt.Graphics;
import java.util.Vector;
import javax.swing.JPanel;
import java.awt.*;
import java.util.ArrayList;
import java.lang.Runnable;
import java.lang.Thread;
import java.util.concurrent.*;
import java.util.concurrent.locks.*;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.TimerTask;
class Fenetre extends JFrame{
	private Panneau p=new Panneau();
	private Autoroute route=new Autoroute(1,"route_1");
	
public Fenetre()
	{
		this.setTitle("SIMULATION D'UN SYSTEME D'EXPLOITATION");
		this.setSize(1000,700);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		this.setLocationRelativeTo(null);
		this.setContentPane(p);
		this.setVisible(true);
      
		
	aller();
	}
	public void aller()
	{
		//Feu f1=new Feu(1,Color.green,620,387);
		Feu f2=new Feu(1,Color.green,220,259);
		Feu f3=new Feu(2,Color.green,490,220);
		
		Vehicule v1=new Vehicule(2,110,220,1);
        Vehicule v2=new Vehicule(2,880,220,2);
        
       Vehicule v3=new Vehicule(2,109,220,1);
     
        Vehicule v4=new Vehicule(2,880,220,2);
       Vehicule v5=new Vehicule(2,110,220,1);
        Vehicule v6=new Vehicule(2,880,220,2);
       // Vehicule v7=new Vehicule(2,110,220,1);
        Vehicule v8=new Vehicule(2,880,220,2);
		 
		 route.addFeu(f3);
		 route.addFeu(f2);
		 route.ajouteVehicule(v1);
		 route.ajouteVehicule(v3);
	   route.ajouteVehicule(v5);
		//route.ajouteVehicule(v7);
		route.ajouteVehicule(v2);
		route.ajouteVehicule(v4);
		route.ajouteVehicule(v6);
		route.ajouteVehicule(v8);
		 //route.ajouteVehicule(v4);
		 Vector<Vehicule> v=route.getVehicule();
		
				 f3.start();
		
		//SECOND TIMER IL AURA POUR BUT DE CHANGER LA COULEUR DE F2 APRES UN CERTAIN TEMPS
		 
				 f2.start();
			
        
		for(int j=0;j<v.size();j++)
         {      	
			try {
				Thread.sleep(700);
			}
			catch(InterruptedException r)
			{
				r.printStackTrace();
			}
        		 v.get(j).start();
         }
		 
		
		
		 while(true)
		 {		
		       try {
		             Thread.sleep(100);
		       } catch (InterruptedException e) {
		             e.printStackTrace();
		       }
		  
		       if((v1.getX()>220)&&(v1.getX()<230)&&(v1.getY()>199)&&(v1.getY()<230)&&(v1.getSens()==4))
		       {
		    	   v1.setSens(1);	
		    	   	
		       }
		      
		       else if((v1.getX()>=f3.getX()-35)&&(v1.getX()<=f3.getX()-10)&&(f3.getClr().equals(Color.red))&&(v1.getY()<=220)&&(v1.getY()>=190))
		       {
		    	   v1.setSens(3);   
		       }
		       else if((v1.getY()<=410)&&(v1.getY()>390)&&(v1.getX()<=f3.getX()-10)&&(v1.getX()>=f3.getX()-35))
		       {
		    	   
		    	  
		    	  v1.setSens(2);		
		    	 //v1.setRoule(true);
		    	   
			   }
		       
		       else if((v1.getX()>110)&&(v1.getX()<230)&&(v1.getY()>390)&&(v1.getY()<=410))
		       {
		    	 
		    	   v1.setSens(4);
		    	  
		    	   
		       }
		       else if((v1.getY()<f2.getY()+15)&&(v1.getY()>=f2.getY())&&((f2.getClr()).equals(Color.red))&&(v1.getSens()==4))
	             {
		    	   v1.setRoule(false); 
	             }	
		    
		      else if((v1.getY()<f2.getY()+25)&&((f2.getClr()).equals(Color.green))&&(v1.getSens()==4))
	             {
		    	 v1.setSens(4);
		    	   //v1.setRoule(true);
		    	  
	            }	
		       if(f3.getClr().equals(Color.green)&&(v1.getX()>=f3.getX()-25)&&(v1.getX()<=f3.getX()-4)&&(v1.getSens()==1))
	    	   {
		    	   v1.avance1();
		    	   //v1.setRoule(true);
	    	   }
		     
		       if((v1.getX()>f3.getX()-25)&&(v1.getX()<=f3.getX()-12)&&(v1.getSens()==1))
		       {
		    	   if(f3.getClr().equals(Color.green))
		    	   {
		    		   v1.setSens(1);
		    		   
		    	   }
		    	   else if(f3.getClr().equals(Color.red))
		    	   {
		    		   v1.setRoule(false);	   
		    	   }
		       }
		       
		       if((v1.getX()>f3.getX())&&(v1.getY()<f3.getY()+10))
		       {
		    	   v1.avance1();		    	   
		       }
		       		       ///////////////////////////////////////////////
		       if((v3.getX()>220)&&(v3.getX()<230)&&(v3.getY()>199)&&(v3.getY()<230)&&(v3.getSens()==4))
		       {
		    	   v3.setSens(1);
		    	   
		       }
		      
		       else if((v3.getX()>=f3.getX()-35)&&(v3.getX()<=f3.getX()-10)&&(f3.getClr().equals(Color.red))&&(v3.getY()<=220)&&(v3.getY()>=190))
		       {
		    	   v3.setSens(3);  
		    	   
		    	    
		       }
		       else if((v3.getY()<=410)&&(v3.getY()>390)&&(v3.getX()<=f3.getX()-10)&&(v3.getX()>=f3.getX()-35))
		       {
		    	   
		    	  
		    	  v3.setSens(2);		
		    	 v3.setRoule(true);
		    	   
			   }
		       
		       else if((v3.getX()>110)&&(v3.getX()<230)&&(v3.getY()>390)&&(v3.getY()<=410))
		       {
		    	 
		    	   v3.setSens(4);
		    	   v3.setRoule(true);
		    	  
		    	   
		       }
		       else if((v3.getY()<f2.getY()+20)&&(v3.getY()>=f2.getY())&&((f2.getClr()).equals(Color.red))&&(v3.getSens()==4))
	             {
		    	   v3.setRoule(false); 
	             }	
		    
		      else if((v3.getY()<=f2.getY()+25)&&((f2.getClr()).equals(Color.green))&&(v3.getSens()==4))
	             {
		    	 v3.setSens(4);
		    	   v3.setRoule(true);	    	  
	            }	
		       if(f3.getClr().equals(Color.green)&&(v3.getX()>=f3.getX()-25)&&(v3.getX()<=f3.getX()-4)&&(v3.getSens()==1))
	    	   {
		    	   v3.avance1();
		    	   v3.setRoule(true);
	    	   }
		     
		       if((v3.getX()>f3.getX()-25)&&(v3.getX()<=f3.getX()-15)&&(v3.getSens()==1))
		       {
		    	   if(f3.getClr().equals(Color.green))
		    	   {
		    		   v3.setSens(1);
		    		   v3.setRoule(true);
		    		   
		    	   }
		    	   
		    	   else if(f3.getClr().equals(Color.red))
		    	   {
		    		   v3.setRoule(false);	   
		    	   }
		       }
		       
		       
		       if((v3.getX()>f3.getX())&&(v3.getY()<f3.getY()+10))
		       {
		    	   v3.avance1();
		    	   v3.setRoule(true);
		       }
		       
		       
		       /////////////////////////////////////////////
		       
		       
		       if((v5.getX()>220)&&(v5.getX()<230)&&(v5.getY()>199)&&(v5.getY()<230)&&(v5.getSens()==4))
		       {
		    	   v5.setSens(1);
		    	   
		       }
		      
		       else if((v5.getX()>=f3.getX()-35)&&(v5.getX()<=f3.getX()-10)&&(f3.getClr().equals(Color.red))&&(v5.getY()<=220)&&(v5.getY()>=190))
		       {
		    	   v5.setSens(3);  
		    	   
		    	    
		       }
		       else if((v5.getY()<=410)&&(v5.getY()>390)&&(v5.getX()<=f3.getX()-10)&&(v5.getX()>=f3.getX()-35))
		       {
		    	   
		    	  
		    	  v5.setSens(2);		
		    	 v5.setRoule(true);
		    	   
			   }
		       
		       else if((v5.getX()>110)&&(v5.getX()<230)&&(v5.getY()>390)&&(v5.getY()<=410))
		       {
		    	 
		    	   v5.setSens(4);
		    	   v5.setRoule(true);
		    	  
		    	   
		       }
		       else if((v5.getY()<f2.getY()+20)&&(v5.getY()>=f2.getY())&&((f2.getClr()).equals(Color.red))&&(v5.getSens()==4))
	             {
		    	   v5.setRoule(false); 
	             }	
		    
		      else if((v5.getY()<=f2.getY()+25)&&((f2.getClr()).equals(Color.green))&&(v5.getSens()==4))
	             {
		    	 v5.setSens(4);
		    	   v5.setRoule(true);	    	  
	            }	
		       if(f3.getClr().equals(Color.green)&&(v5.getX()>=f3.getX()-25)&&(v5.getX()<=f3.getX()-4)&&(v5.getSens()==1))
	    	   {
		    	   v5.avance1();
		    	   v5.setRoule(true);
	    	   }
		     
		       if((v5.getX()>f3.getX()-25)&&(v5.getX()<=f3.getX()-15)&&(v5.getSens()==1))
		       {
		    	   if(f3.getClr().equals(Color.green))
		    	   {
		    		   v5.setSens(1);
		    		   v5.setRoule(true);
		    		   
		    	   }
		    	   
		    	   else if(f3.getClr().equals(Color.red))
		    	   {
		    		   v5.setRoule(false);	   
		    	   }
		       }
		       
		       
		       if((v5.getX()>f3.getX())&&(v5.getY()<f3.getY()+10))
		       {
		    	   v5.avance1();
		    	   v5.setRoule(true);
		       }
		       
		       
		       
		       
		       
		       ///////////////////////////////////////////////
		       if((v2.getX()<=f3.getX()+15)&&(v2.getX()>f3.getX())&&(v2.getSens()==2))
		       {
		    	   if(f3.getClr().equals(Color.green))
		    	   {
		    		   v2.setSens(2);
		    		   v2.setRoule(true);
		    	   }
		    	   else if(f3.getClr().equals(Color.red))
		    	   {
		    		   v2.setRoule(false);	    		
		    	   }
		       }	
		       
		       ////////////////////////////////////////////////
		       if((v4.getX()<=f3.getX()+36)&&(v4.getX()>f3.getX())&&(v4.getSens()==2))
		       {
		    	   if(f3.getClr().equals(Color.green))
		    	   {
		    		   v4.setSens(2);
		    		   v4.setRoule(true);
		    	   }
		    	   else if(f3.getClr().equals(Color.red))
		    	   {
		    		   v4.setRoule(false);	    		
		    	   }
		       }	
		       
		       
		       
		       ///////////////////////////////////////////////
		       if((v6.getX()<=f3.getX()+50)&&(v6.getX()>f3.getX())&&(v6.getSens()==2))
		       {
		    	   if(f3.getClr().equals(Color.green))
		    	   {
		    		   v6.setSens(2);
		    		   v6.setRoule(true);
		    	   }
		    	   else if(f3.getClr().equals(Color.red))
		    	   {
		    		   v6.setRoule(false);	    		
		    	   }
		       }	
		       ///////////////////////////////////////////////
		       if((v8.getX()<=f3.getX()+58)&&(v8.getX()>f3.getX())&&(v8.getSens()==2))
		       {
		    	   if(f3.getClr().equals(Color.green))
		    	   {
		    		   v8.setSens(2);
		    		   v8.setRoule(true);
		    	   }
		    	   else if(f3.getClr().equals(Color.red))
		    	   {
		    		   v8.setRoule(false);	    		
		    	   }
		       }	
		       /////////////////////////////////
		       
		       if((v2.getX()<=f3.getX()-30)&&(v2.getRoule()==true))
				 {
					f2.setClr(Color.red);
					 v4.setRoule(false);
					 v6.setRoule(false);
					 v8.setRoule(false);
					 f3.setClr(Color.red);
				 }
				 if(v2.getX()<=80)
				 {
					 f2.setClr(Color.red);
					 v4.setSens(2);					 
					 v4.setRoule(true);
					 v6.setSens(2);
					 v6.setRoule(false);
					 v8.setSens(2);
					 v8.setRoule(false);
					 f3.setClr(Color.green);
				 }
				 //////////
				 if((v4.getX()<=f3.getX()-30)&&(v4.getRoule()==true))
				 {
					 f2.setClr(Color.red);
					 v6.setRoule(false);
					 v8.setRoule(false);
					 f3.setClr(Color.red);
				 }
				 if(v4.getX()<=80)
				 {
					 f2.setClr(Color.red);
					 v6.setSens(2);
					 v6.setRoule(true);
					 v8.setSens(2);
					 v8.setRoule(false);
					 f3.setClr(Color.green);
				 }
		       ///////////////////////////
				 if((v6.getX()<=f3.getX()-30)&&(v6.getRoule()==true))
				 {			
					 f2.setClr(Color.red);
					 v8.setRoule(false);
					 f3.setClr(Color.red);
				 }
				 if(v6.getX()<=80)
				 {		
					 
					 v8.setSens(2);
					 v8.setRoule(true);
					 f3.setClr(Color.green);
				 }
				 if((v8.getX()<=f3.getX()-30)&&(v8.getRoule()==true))
				 {			
					 f2.setClr(Color.red);
				 }
				 if(v8.getX()<=85)
				 {
					 f2.setClr(Color.green);
				 }
				 //////////////////
				 if((v1.getY()<f2.getY()+15)&&(v1.getY()>=f2.getY())&&((f2.getClr()).equals(Color.red))&&(v1.getSens()==4)&&(v3.getY()<=f2.getY()+37)&&(v3.getY()>=f2.getY())&&(v3.getSens()==4)&&(v5.getY()<=f2.getY()+45)&&(v5.getY()>=f2.getY())&&(v5.getSens()==4))
	             {
		    	   v1.setRoule(false); 
		    	   v3.setRoule(false);
		    	   v5.setRoule(false);
	             }	
				 
				 /////////////
				 if((v1.getY()<f2.getY()+15)&&(v1.getY()>=f2.getY())&&((f2.getClr()).equals(Color.green))&&(v1.getSens()==4)&&(v3.getY()<=f2.getY()+37)&&(v3.getY()>=f2.getY())&&(v3.getSens()==4)&&(v5.getY()<=f2.getY()+45)&&(v5.getY()>=f2.getY())&&(v5.getSens()==4))
	             {
		    	   v1.setRoule(true); 
		    	   v3.setRoule(true);
		    	   v5.setRoule(true);
	             }
				 ///////////////////
		       p.setFeu(f2,f3);		      
		       p.setVehicule(route.getVehicule());
		     p.repaint();	    
		 }
	}	
}
class Panneau extends JPanel
{
	//Vector<Feu> f;
	Feu f3,f2;
	 Vector<Vehicule> v;
	public void paintComponent (Graphics snake)
	{
		
		snake.setColor(Color.white);
	      // snake.drawOval(0, 0, this.getWidth(), this.getHeight());
	     //snake.fillStyle(0,0,this.getWidth(), this.getHeight());
	       /* route  horizontale */
	       snake.setColor(Color.black);
	       snake.fillRect(0, 149, 1000, 100);
	      
	       snake.setColor(Color.white);
	       snake.fillRect(0,199,40,3);
	      
	       snake.setColor(Color.white);
	       snake.fillRect(50,199,20,3);
	       
	       snake.setColor(Color.white);
	       snake.fillRect(150,199,20,3);
	       snake.setColor(Color.white);
	       snake.fillRect(250,199,90,3);
	       snake.setColor(Color.white);
	       snake.fillRect(350,199,90,3);
	       snake.setColor(Color.white);
	       snake.fillRect(450,199,90,3);
	       snake.setColor(Color.white);
	       snake.fillRect(550,199,90,3);
	       snake.setColor(Color.white);
	       snake.fillRect(650,199,90,3);
	       snake.setColor(Color.white);
	       snake.fillRect(750,199,90,3);
	       snake.setColor(Color.white);
	       snake.fillRect(850,199,90,3);
	       snake.setColor(Color.white);
	       snake.fillRect(950,199,90,3);
	       
	      snake.setColor(Color.orange);
	      snake.fillRect(900,140,100,120);
	      
	      snake.setColor(Color.orange);
	      snake.fillRect(0,140,100,120);
	      //seconde routes de detournement
	      
	      snake.setColor(Color.black);
	      snake.fillRect(435,220,50,200);
	      
	      snake.setColor(Color.black);
	      snake.fillRect(250,370,200,50);
	      
	      snake.setColor(Color.black);
	      snake.fillRect(210,220,50,200);
	      
	      snake.setColor(f3.getClr());
	      snake.fillRect(f3.getX(),f3.getY()-14,2,42);
	      
	      
	      snake.setColor(f2.getClr());
	      snake.fillRect(f2.getX()-8,f2.getY()-14,45,3);	      
		       for(int i=0;i<v.size();i++)
		       {
		             snake.setColor(Color.blue);
		             snake.fillRect(v.get(i).getX(),v.get(i).getY(),20,20);
		       }
	}
	public void setFeu(Feu a,Feu b) {
        f2=a;
        		f3=b;
  }
  public void setVehicule(Vector<Vehicule> v1) {
        v=v1;
  }
	
}
public class Test {
		// TODO Auto-generated method stub
		static Autoroute route;

	    public static void main(String args[]) {
		
	    	//route = new Autoroute(3,1000);
	    	
	    	Fenetre f = new Fenetre();	
		
	   }
	}


